// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ucsdsysnet/faasnap/models"
)

// PostVmmsOKCode is the HTTP code returned for type PostVmmsOK
const PostVmmsOKCode int = 200

/*
PostVmmsOK OK

swagger:response postVmmsOK
*/
type PostVmmsOK struct {

	/*
	  In: Body
	*/
	Payload *models.VM `json:"body,omitempty"`
}

// NewPostVmmsOK creates PostVmmsOK with default headers values
func NewPostVmmsOK() *PostVmmsOK {

	return &PostVmmsOK{}
}

// WithPayload adds the payload to the post vmms o k response
func (o *PostVmmsOK) WithPayload(payload *models.VM) *PostVmmsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post vmms o k response
func (o *PostVmmsOK) SetPayload(payload *models.VM) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostVmmsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostVmmsBadRequestCode is the HTTP code returned for type PostVmmsBadRequest
const PostVmmsBadRequestCode int = 400

/*
PostVmmsBadRequest Invalid request

swagger:response postVmmsBadRequest
*/
type PostVmmsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostVmmsBadRequestBody `json:"body,omitempty"`
}

// NewPostVmmsBadRequest creates PostVmmsBadRequest with default headers values
func NewPostVmmsBadRequest() *PostVmmsBadRequest {

	return &PostVmmsBadRequest{}
}

// WithPayload adds the payload to the post vmms bad request response
func (o *PostVmmsBadRequest) WithPayload(payload *PostVmmsBadRequestBody) *PostVmmsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post vmms bad request response
func (o *PostVmmsBadRequest) SetPayload(payload *PostVmmsBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostVmmsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
