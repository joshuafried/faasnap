// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetSnapshotsSsIDReapOKCode is the HTTP code returned for type GetSnapshotsSsIDReapOK
const GetSnapshotsSsIDReapOKCode int = 200

/*
GetSnapshotsSsIDReapOK OK

swagger:response getSnapshotsSsIdReapOK
*/
type GetSnapshotsSsIDReapOK struct {
}

// NewGetSnapshotsSsIDReapOK creates GetSnapshotsSsIDReapOK with default headers values
func NewGetSnapshotsSsIDReapOK() *GetSnapshotsSsIDReapOK {

	return &GetSnapshotsSsIDReapOK{}
}

// WriteResponse to the client
func (o *GetSnapshotsSsIDReapOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// GetSnapshotsSsIDReapBadRequestCode is the HTTP code returned for type GetSnapshotsSsIDReapBadRequest
const GetSnapshotsSsIDReapBadRequestCode int = 400

/*
GetSnapshotsSsIDReapBadRequest Invalid request

swagger:response getSnapshotsSsIdReapBadRequest
*/
type GetSnapshotsSsIDReapBadRequest struct {

	/*
	  In: Body
	*/
	Payload *GetSnapshotsSsIDReapBadRequestBody `json:"body,omitempty"`
}

// NewGetSnapshotsSsIDReapBadRequest creates GetSnapshotsSsIDReapBadRequest with default headers values
func NewGetSnapshotsSsIDReapBadRequest() *GetSnapshotsSsIDReapBadRequest {

	return &GetSnapshotsSsIDReapBadRequest{}
}

// WithPayload adds the payload to the get snapshots ss Id reap bad request response
func (o *GetSnapshotsSsIDReapBadRequest) WithPayload(payload *GetSnapshotsSsIDReapBadRequestBody) *GetSnapshotsSsIDReapBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get snapshots ss Id reap bad request response
func (o *GetSnapshotsSsIDReapBadRequest) SetPayload(payload *GetSnapshotsSsIDReapBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSnapshotsSsIDReapBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
