// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutSnapshotsSsIDMincoreOKCode is the HTTP code returned for type PutSnapshotsSsIDMincoreOK
const PutSnapshotsSsIDMincoreOKCode int = 200

/*
PutSnapshotsSsIDMincoreOK OK

swagger:response putSnapshotsSsIdMincoreOK
*/
type PutSnapshotsSsIDMincoreOK struct {
}

// NewPutSnapshotsSsIDMincoreOK creates PutSnapshotsSsIDMincoreOK with default headers values
func NewPutSnapshotsSsIDMincoreOK() *PutSnapshotsSsIDMincoreOK {

	return &PutSnapshotsSsIDMincoreOK{}
}

// WriteResponse to the client
func (o *PutSnapshotsSsIDMincoreOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PutSnapshotsSsIDMincoreBadRequestCode is the HTTP code returned for type PutSnapshotsSsIDMincoreBadRequest
const PutSnapshotsSsIDMincoreBadRequestCode int = 400

/*
PutSnapshotsSsIDMincoreBadRequest Invalid request

swagger:response putSnapshotsSsIdMincoreBadRequest
*/
type PutSnapshotsSsIDMincoreBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PutSnapshotsSsIDMincoreBadRequestBody `json:"body,omitempty"`
}

// NewPutSnapshotsSsIDMincoreBadRequest creates PutSnapshotsSsIDMincoreBadRequest with default headers values
func NewPutSnapshotsSsIDMincoreBadRequest() *PutSnapshotsSsIDMincoreBadRequest {

	return &PutSnapshotsSsIDMincoreBadRequest{}
}

// WithPayload adds the payload to the put snapshots ss Id mincore bad request response
func (o *PutSnapshotsSsIDMincoreBadRequest) WithPayload(payload *PutSnapshotsSsIDMincoreBadRequestBody) *PutSnapshotsSsIDMincoreBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put snapshots ss Id mincore bad request response
func (o *PutSnapshotsSsIDMincoreBadRequest) SetPayload(payload *PutSnapshotsSsIDMincoreBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSnapshotsSsIDMincoreBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
