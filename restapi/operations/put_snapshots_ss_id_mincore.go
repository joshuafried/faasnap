// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutSnapshotsSsIDMincoreHandlerFunc turns a function with the right signature into a put snapshots ss ID mincore handler
type PutSnapshotsSsIDMincoreHandlerFunc func(PutSnapshotsSsIDMincoreParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutSnapshotsSsIDMincoreHandlerFunc) Handle(params PutSnapshotsSsIDMincoreParams) middleware.Responder {
	return fn(params)
}

// PutSnapshotsSsIDMincoreHandler interface for that can handle valid put snapshots ss ID mincore params
type PutSnapshotsSsIDMincoreHandler interface {
	Handle(PutSnapshotsSsIDMincoreParams) middleware.Responder
}

// NewPutSnapshotsSsIDMincore creates a new http.Handler for the put snapshots ss ID mincore operation
func NewPutSnapshotsSsIDMincore(ctx *middleware.Context, handler PutSnapshotsSsIDMincoreHandler) *PutSnapshotsSsIDMincore {
	return &PutSnapshotsSsIDMincore{Context: ctx, Handler: handler}
}

/*
	PutSnapshotsSsIDMincore swagger:route PUT /snapshots/{ssId}/mincore putSnapshotsSsIdMincore

Put mincore state
*/
type PutSnapshotsSsIDMincore struct {
	Context *middleware.Context
	Handler PutSnapshotsSsIDMincoreHandler
}

func (o *PutSnapshotsSsIDMincore) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPutSnapshotsSsIDMincoreParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PutSnapshotsSsIDMincoreBadRequestBody put snapshots ss ID mincore bad request body
//
// swagger:model PutSnapshotsSsIDMincoreBadRequestBody
type PutSnapshotsSsIDMincoreBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this put snapshots ss ID mincore bad request body
func (o *PutSnapshotsSsIDMincoreBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this put snapshots ss ID mincore bad request body based on context it is used
func (o *PutSnapshotsSsIDMincoreBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutSnapshotsSsIDMincoreBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutSnapshotsSsIDMincoreBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PutSnapshotsSsIDMincoreBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
