// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteSnapshotsSsIDReapOKCode is the HTTP code returned for type DeleteSnapshotsSsIDReapOK
const DeleteSnapshotsSsIDReapOKCode int = 200

/*
DeleteSnapshotsSsIDReapOK OK

swagger:response deleteSnapshotsSsIdReapOK
*/
type DeleteSnapshotsSsIDReapOK struct {
}

// NewDeleteSnapshotsSsIDReapOK creates DeleteSnapshotsSsIDReapOK with default headers values
func NewDeleteSnapshotsSsIDReapOK() *DeleteSnapshotsSsIDReapOK {

	return &DeleteSnapshotsSsIDReapOK{}
}

// WriteResponse to the client
func (o *DeleteSnapshotsSsIDReapOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteSnapshotsSsIDReapBadRequestCode is the HTTP code returned for type DeleteSnapshotsSsIDReapBadRequest
const DeleteSnapshotsSsIDReapBadRequestCode int = 400

/*
DeleteSnapshotsSsIDReapBadRequest Invalid request

swagger:response deleteSnapshotsSsIdReapBadRequest
*/
type DeleteSnapshotsSsIDReapBadRequest struct {

	/*
	  In: Body
	*/
	Payload *DeleteSnapshotsSsIDReapBadRequestBody `json:"body,omitempty"`
}

// NewDeleteSnapshotsSsIDReapBadRequest creates DeleteSnapshotsSsIDReapBadRequest with default headers values
func NewDeleteSnapshotsSsIDReapBadRequest() *DeleteSnapshotsSsIDReapBadRequest {

	return &DeleteSnapshotsSsIDReapBadRequest{}
}

// WithPayload adds the payload to the delete snapshots ss Id reap bad request response
func (o *DeleteSnapshotsSsIDReapBadRequest) WithPayload(payload *DeleteSnapshotsSsIDReapBadRequestBody) *DeleteSnapshotsSsIDReapBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete snapshots ss Id reap bad request response
func (o *DeleteSnapshotsSsIDReapBadRequest) SetPayload(payload *DeleteSnapshotsSsIDReapBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteSnapshotsSsIDReapBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
