// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Snapshot snapshot
//
// swagger:model Snapshot
type Snapshot struct {

	// interval threshold
	IntervalThreshold int64 `json:"interval_threshold,omitempty"`

	// mem file path
	MemFilePath string `json:"mem_file_path,omitempty"`

	// record regions
	RecordRegions bool `json:"record_regions,omitempty"`

	// size threshold
	SizeThreshold int64 `json:"size_threshold,omitempty"`

	// snapshot path
	SnapshotPath string `json:"snapshot_path,omitempty"`

	// snapshot type
	SnapshotType string `json:"snapshot_type,omitempty"`

	// ss Id
	SsID string `json:"ssId,omitempty"`

	// version
	Version string `json:"version,omitempty"`

	// vm Id
	// Required: true
	VMID *string `json:"vmId"`
}

// Validate validates this snapshot
func (m *Snapshot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVMID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Snapshot) validateVMID(formats strfmt.Registry) error {

	if err := validate.Required("vmId", "body", m.VMID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this snapshot based on context it is used
func (m *Snapshot) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Snapshot) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Snapshot) UnmarshalBinary(b []byte) error {
	var res Snapshot
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
